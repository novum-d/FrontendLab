{"ast":null,"code":"var _jsxFileName = \"/home/hamadatomoki/repos/FrontendLab/spa_react_javascript_hello-world/src/components/navigation/mobile/mobile-nav-bar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { MobileMenuToggleButton } from \"./mobile-menu-toggle-button\";\nimport { MobileNavBarBrand } from \"./mobile-nav-bar-brand\";\nimport { MobileNavBarButtons } from \"./mobile-nav-bar-buttons\";\nimport { MobileNavBarTabs } from \"./mobile-nav-bar-tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MobileMenuState = {\n  CLOSED: \"closed\",\n  OPEN: \"open\"\n};\nconst MobileMenuIcon = {\n  CLOSE: \"close\",\n  MENU: \"menu\"\n};\nexport const MobileNavBar = () => {\n  _s();\n  const [mobileMenuState, setMobileMenuState] = React.useState(MobileMenuState.CLOSED);\n  const [mobileMenuIcon, setMobileMenuIcon] = React.useState(MobileMenuIcon.MENU);\n  const isMobileMenuOpen = () => {\n    return mobileMenuState === MobileMenuState.OPEN;\n  };\n  const closeMobileMenu = () => {\n    document.body.classList.remove(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.CLOSED);\n    setMobileMenuIcon(MobileMenuIcon.MENU);\n  };\n  const openMobileMenu = () => {\n    document.body.classList.add(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.OPEN);\n    setMobileMenuIcon(MobileMenuIcon.CLOSE);\n  };\n  const toggleMobileMenu = () => {\n    if (isMobileMenuOpen()) {\n      closeMobileMenu();\n    } else {\n      openMobileMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-nav-bar__container\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"mobile-nav-bar\",\n      children: [/*#__PURE__*/_jsxDEV(MobileNavBarBrand, {\n        handleClick: closeMobileMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MobileMenuToggleButton, {\n        icon: mobileMenuIcon,\n        handleClick: toggleMobileMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isMobileMenuOpen() && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-nav-bar__menu\",\n        children: [/*#__PURE__*/_jsxDEV(MobileNavBarTabs, {\n          handleClick: closeMobileMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileNavBarButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MobileNavBar, \"bDIktD53e1MlhsgGTDYPRJ+GuMU=\");\n_c = MobileNavBar;\nvar _c;\n$RefreshReg$(_c, \"MobileNavBar\");","map":{"version":3,"names":["React","MobileMenuToggleButton","MobileNavBarBrand","MobileNavBarButtons","MobileNavBarTabs","MobileMenuState","CLOSED","OPEN","MobileMenuIcon","CLOSE","MENU","MobileNavBar","mobileMenuState","setMobileMenuState","useState","mobileMenuIcon","setMobileMenuIcon","isMobileMenuOpen","closeMobileMenu","document","body","classList","remove","openMobileMenu","add","toggleMobileMenu"],"sources":["/home/hamadatomoki/repos/FrontendLab/spa_react_javascript_hello-world/src/components/navigation/mobile/mobile-nav-bar.js"],"sourcesContent":["import React from \"react\";\nimport { MobileMenuToggleButton } from \"./mobile-menu-toggle-button\";\nimport { MobileNavBarBrand } from \"./mobile-nav-bar-brand\";\nimport { MobileNavBarButtons } from \"./mobile-nav-bar-buttons\";\nimport { MobileNavBarTabs } from \"./mobile-nav-bar-tabs\";\n\nconst MobileMenuState = {\n  CLOSED: \"closed\",\n  OPEN: \"open\",\n};\n\nconst MobileMenuIcon = {\n  CLOSE: \"close\",\n  MENU: \"menu\",\n};\n\nexport const MobileNavBar = () => {\n  const [mobileMenuState, setMobileMenuState] = React.useState(\n    MobileMenuState.CLOSED\n  );\n  const [mobileMenuIcon, setMobileMenuIcon] = React.useState(\n    MobileMenuIcon.MENU\n  );\n\n  const isMobileMenuOpen = () => {\n    return mobileMenuState === MobileMenuState.OPEN;\n  };\n\n  const closeMobileMenu = () => {\n    document.body.classList.remove(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.CLOSED);\n    setMobileMenuIcon(MobileMenuIcon.MENU);\n  };\n\n  const openMobileMenu = () => {\n    document.body.classList.add(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.OPEN);\n    setMobileMenuIcon(MobileMenuIcon.CLOSE);\n  };\n\n  const toggleMobileMenu = () => {\n    if (isMobileMenuOpen()) {\n      closeMobileMenu();\n    } else {\n      openMobileMenu();\n    }\n  };\n\n  return (\n    <div className=\"mobile-nav-bar__container\">\n      <nav className=\"mobile-nav-bar\">\n        <MobileNavBarBrand handleClick={closeMobileMenu} />\n        <MobileMenuToggleButton\n          icon={mobileMenuIcon}\n          handleClick={toggleMobileMenu}\n        />\n\n        {isMobileMenuOpen() && (\n          <div className=\"mobile-nav-bar__menu\">\n            <MobileNavBarTabs handleClick={closeMobileMenu} />\n            <MobileNavBarButtons />\n          </div>\n        )}\n      </nav>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,gBAAgB,QAAQ,uBAAuB;AAAC;AAEzD,MAAMC,eAAe,GAAG;EACtBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;EAChC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAC1DT,eAAe,CAACC,MAAM,CACvB;EACD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CACxDN,cAAc,CAACE,IAAI,CACpB;EAED,MAAMO,gBAAgB,GAAG,MAAM;IAC7B,OAAOL,eAAe,KAAKP,eAAe,CAACE,IAAI;EACjD,CAAC;EAED,MAAMW,eAAe,GAAG,MAAM;IAC5BC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,oBAAoB,CAAC;IACpDT,kBAAkB,CAACR,eAAe,CAACC,MAAM,CAAC;IAC1CU,iBAAiB,CAACR,cAAc,CAACE,IAAI,CAAC;EACxC,CAAC;EAED,MAAMa,cAAc,GAAG,MAAM;IAC3BJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,GAAG,CAAC,oBAAoB,CAAC;IACjDX,kBAAkB,CAACR,eAAe,CAACE,IAAI,CAAC;IACxCS,iBAAiB,CAACR,cAAc,CAACC,KAAK,CAAC;EACzC,CAAC;EAED,MAAMgB,gBAAgB,GAAG,MAAM;IAC7B,IAAIR,gBAAgB,EAAE,EAAE;MACtBC,eAAe,EAAE;IACnB,CAAC,MAAM;MACLK,cAAc,EAAE;IAClB;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,2BAA2B;IAAA,uBACxC;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B,QAAC,iBAAiB;QAAC,WAAW,EAAEL;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eACnD,QAAC,sBAAsB;QACrB,IAAI,EAAEH,cAAe;QACrB,WAAW,EAAEU;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC9B,EAEDR,gBAAgB,EAAE,iBACjB;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC,QAAC,gBAAgB;UAAC,WAAW,EAAEC;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAG,eAClD,QAAC,mBAAmB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAE1B;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAlDWP,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}